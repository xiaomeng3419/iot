"""
Django settings for iot project.

Generated by 'django-admin startproject' using Django 2.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'r(wnsm!q&w2-z%&%_ni)6p95d!@%oel0z%r07yxax!=juqq4g1'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'polls',
    'day',
    # 'django_crontab',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "login",
    'blog',
    "zpSpider",
    'corsheaders',
    "rest_framework",
    "rest_framework_swagger",
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    # 'django.middleware.csrf.CsrfResponseMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'iot.IotMidWare.PubAuthMiddleWare',
]

ROOT_URLCONF = 'iot.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "templates")],
        'DIRS': ['frontend/dist'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'iot.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases
import pymysql         # 一定要添加这两行！通过pip install pymysql！
pymysql.install_as_MySQLdb()

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME':'mydatabase',
        'HOST': '127.0.0.1',
        'PORT': '3306',
        'USER': 'root',
        'PASSWORD': 'Ontoweb@3419',
        'ATOMIC_REQUEST':True,
    }
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    # }
}

CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': 'redis://123456@127.0.0.1:6379',
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        },
    },
}
#链接超时时间
REDIS_TIMEOUT=7*24*60*60
# 缓存时间
CUBES_REDIS_TIMEOUT=60*60
NEVER_REDIS_TIMEOUT=365*24*60*60
SESSION_COOKIE_AGE=200 * 60 #设置session过期时间为30分钟
SESSION_ENGINE = 'django.contrib.sessions.backends.cache'
SESSION_CACHE_ALIAS = 'default'

#免中间件过滤的路径
EXCLUDE_URL =  (
     '/login/login',
    '/login/logout/',
    '^/login/create_code_img/.*',
    '/api-doc',
     '/blog/sqlexe/',
     '/zpSpider/getStream/',
     '/login/getdepartments/',
     '/login/register/',
     '/login/translate/',
    # '/',
    '/api-auth/login/ ',
    '/api-auth/',
     '/zpSpider/sliderNews',
     '/zpSpider/getNewsById',
    '/admin',
    '/day/upload/'
    # '',
)
# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True
# 允许地址后面可以是非斜杠结尾
APPEND_SLASH = False

LOGIN_URL = 'http:127.0.0.1:8083/#/login/'
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS=(
    # os.path.join(BASE_DIR,"static"),
    os.path.join(BASE_DIR,"frontend/dist/static"),
)
# REST_FRAMEWORK = {
#     # 使用Django的标准`django.contrib.auth`权限管理类,
#     # 或者为尚未认证的用户，赋予只读权限.
#     'DEFAULT_PERMISSION_CLASSES': [
#         'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
#     ]
# }

SWAGGER_SETTINGS = {
    'JSON_EDITOR': True,
    'LOGIN_URL': 'login',
    'LOGOUT_URL': 'logout',
}

API_DOC_PATH = os.path.join(BASE_DIR, "api-doc/swagger.json")

DAYTIMETOTAL = 2592000
#django admin 账户密码
# yes
# ontowebzp

# CRONJOBS = [
#     ('0/5 * *  * * ? ', 'crontabTest.test', '>> /var/run.log'),
# ]
"""
  格式：
         参数1：定时 例如47 11 * * * 表示每天的11时47分执行
         参数2：方法的python模块路径，如果执行django-admin命令，则写django.core.management.call_command
         参数3：方法的位置参数列表（默认值：[]），如果执行django-admin命令，则填写所需执行的命令，例如我们在polls中已经定义过的closepoll
         参数4：方法的关键字参数的dict（默认值：{}）
         参数5：执行log存放位置（即重定向到文件，默认：''）
"""